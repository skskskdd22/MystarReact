{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\MystarReact\\\\front\\\\pages\\\\_app.js\";\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n{\n  /*pages에 있는 파일에 공통적으로 들어가는 것을\r\n  중복작업을 하지않기 위해 만든 파일\r\n  무조건 _app.js라는 파일명으로 만들어야 next에서 인식할수있다.\r\n  기본적으로 next에서 제공하지만 파일을 만들면 커스텀할 수있다.*/\n}\n\nvar StarLive = function StarLive(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"StarLive\"), React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.19.8/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\n{\n  /*여기서의 .node란 React에 들어갈 수있는 모든 것(태그, 문자열, 렌더링 될 수있는 모든 것)*/\n}\nStarLive.propTypes = {\n  Component: PropTypes.elementType,\n  store: PropTypes.object\n};\nexport default withRedux(function (initialState, options) {\n  var middlewares = [];\n  var enhancer = compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  return store;\n})(StarLive);","map":{"version":3,"sources":["C:\\Users\\Owner\\Documents\\MystarReact\\front\\pages\\_app.js"],"names":["React","Head","PropTypes","withRedux","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","AppLayout","reducer","rootSaga","StarLive","Component","store","propTypes","elementType","object","initialState","options","middlewares","enhancer","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA;AAAC;;;;AAGsC;;AAEvC,IAAMC,QAAQ,GAAI,SAAZA,QAAY,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC1C,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,6DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALJ,CADF;AAWD,CAZD;;AAaA;AAAC;AAA6D;AAC9DF,QAAQ,CAACG,SAAT,GAAqB;AACnBF,EAAAA,SAAS,EAAEX,SAAS,CAACc,WADF;AAEjBF,EAAAA,KAAK,EAAEZ,SAAS,CAACe;AAFA,CAArB;AAIA,eAAed,SAAS,CAAC,UAACe,YAAD,EAAeC,OAAf,EAA2B;AAClD,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,QAAQ,GAAGhB,OAAO,CACtBD,eAAe,MAAf,SAAmBgB,WAAnB,CADsB,EAEtB,CAACD,OAAO,CAACG,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA0H,UAACC,CAAD;AAAA,WAAOA,CAAP;AAAA,GAFpG,CAAxB;AAIA,MAAMX,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUQ,YAAV,EAAwBG,QAAxB,CAAzB;AACA,SAAOP,KAAP;AACD,CARuB,CAAT,CAQZF,QARY,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\n{/*pages에 있는 파일에 공통적으로 들어가는 것을\r\n중복작업을 하지않기 위해 만든 파일\r\n무조건 _app.js라는 파일명으로 만들어야 next에서 인식할수있다.\r\n기본적으로 next에서 제공하지만 파일을 만들면 커스텀할 수있다.*/}\r\n\r\nconst StarLive  = ({ Component, store }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Head>\r\n        <title>StarLive</title>\r\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.19.8/antd.css\" />\r\n        </Head>\r\n        <AppLayout>\r\n          <Component />\r\n        </AppLayout>\r\n        </Provider>\r\n  );\r\n};\r\n{/*여기서의 .node란 React에 들어갈 수있는 모든 것(태그, 문자열, 렌더링 될 수있는 모든 것)*/}\r\nStarLive.propTypes = {\r\n  Component: PropTypes.elementType,\r\n    store: PropTypes.object,\r\n};\r\nexport default withRedux((initialState, options) => {\r\n  const middlewares = [];\r\n  const enhancer = compose(\r\n    applyMiddleware(...middlewares),\r\n    !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f,\r\n  );\r\n  const store = createStore(reducer, initialState, enhancer);\r\n  return store;\r\n})(StarLive);\r\n"]},"metadata":{},"sourceType":"module"}